# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = tagpack-tool
description = GraphSense TagPack Management Tool
author = GraphSense Core Team
author_email = tech@ikna.io
license = MIT
license_files = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://graphsense.github.io/
# Add here related links, for example:
project_urls =
#    Documentation = https://pyscaffold.org/
    Source = https://github.com/graphsense/graphsense-tagpack-tool
    Changelog = https://github.com/graphsense/graphsense-tagpack-tool/blob/master/CHANGELOG.md
    Tracker = https://github.com/graphsense/graphsense-tagpack-tool/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    Download = https://github.com/graphsense
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Intended Audience :: Developers
    Topic :: Utilities


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.9, <3.12

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-resources==5.8.0;python_version<"3.9"
    wheel
    requests>=2.28.1
    pyyaml>=6.0
    tabulate>=0.9.0
    cassandra-driver>=3.27.0
    lz4>=4.3.2
    psycopg2-binary~=2.9.3
    pandas>=1.3.5
    pyyaml-include~=1.3
    GitPython~=3.1
    giturlparse~=0.10
    coinaddrvalidator~=1.2.3
    colorama~=0.4.6
    cashaddress~=1.0.4
    anytree~=2.9.0
    fastapi[all]~=0.101.0
    typer~=0.13.0
    sqlmodel~=0.0.22
    python-dotenv
    base58>=2.1
    numpy<2.0
    asyncpg~=0.30.0

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install graphsense-tagpack-tool[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

dev =
    setuptools
    pytest
    pytest-cov
    # flake8 >= 4.0.1
    # flake8-comprehensions >= 3.11.1
    # # flake8-blind-except
    # flake8-builtins
    # flake8-docstrings
    # flake8-rst-docstrings
    # flake8-logging-format
    # black >= 22.3.0
    tox
    ruff
    pre-commit
    setuptools_scm
    pdbpp


[options.entry_points]
# Add here console scripts like:
console_scripts =
    tagpack-tool = tagpack.cli:main
    gs-tagstore = tagstore.cli.main:main
# For example:
# console_scripts =
#     fibonacci = tagpack.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov tagpack --cov-report term-missing
    --verbose
    -p no:warnings
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503, E722, A002
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[isort]
profile=black
src_paths=src,tests

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3.1
package = tagpack
extensions =
    markdown
    no_skeleton
